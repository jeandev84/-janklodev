<?php
namespace Jan\Component\Database;


use Exception;
use Jan\Component\Database\Connection\Connection;
use Jan\Component\Database\Common\EntityManager;



/**
 * Class Capsule
 *
 * @package Jan\Component\Database
*/
class Capsule
{
    /**
     * @var Capsule
    */
    protected static $instance;



    /**
     * @var DatabaseManager
    */
    protected $database;




    /**
     * @var EntityManager
    */
    protected $em;




    /**
     * @param DatabaseManager|null $database
    */
    public function __construct(DatabaseManager $database = null)
    {
          if ($database) {
              $this->database = $database;
          }
    }




    /**
     * @param array $config
     * @param string $connection
     * @return void
    */
    public function addConnection(array $config, string $connection)
    {
        if (! $this->database) {
            $database = new DatabaseManager();
            $database->connect($config, $connection);
            $this->database = $database;
        }
    }



    /**
     * @return DatabaseManager
    */
    protected function getDatabase(): DatabaseManager
    {
        if (! $this->database) {
            throw new \RuntimeException('empty database manager.');
        }

        return $this->database;
    }




    /**
     * @return $this
    */
    public function bootAsGlobal(): Capsule
    {
          if (! static::$instance) {
              static::$instance = new static($this->database);
          }

          return $this;
    }



    /**
     * @return Capsule
     *
     * @throws Exception
    */
    public static function instance(): Capsule
    {
        if (! static::$instance) {
            throw new Exception('Cannot get instance of capsule.');
        }

        return static::$instance;
    }


    /**
     * @param string|null $name
     * @return Connection
     * @throws Exception
    */
    public static function connection(string $name = null): Connection
    {
        return static::instance()->getDatabase()
                                 ->connection($name);
    }


    /**
     * @throws Exception
    */
    public function getConnection(): Connection
    {
        return $this->getDatabase()->getConnection();
    }




    /**
     * @param EntityManager $em
    */
    public function setManager(EntityManager $em)
    {
         $this->em = $em;
    }



    /**
     * @return EntityManager
     * @throws Exception
    */
    public function getManager(): EntityManager
    {
        return $this->em;
    }
}

/*
$fs = new \Jan\Component\FileSystem\FileSystem(
    realpath(__DIR__.'/../')
);
$configDb =  $fs->load('config/database.php');
$capsule = new \Jan\Component\Database\Capsule();
$type = $configDb['connection'];
$capsule->addConnection($type, $configDb);
$capsule->bootAsGlobal();

$connection = \Jan\Component\Database\Capsule::connection();
$database = \Jan\Component\Database\Capsule::instance();
dump($database->connection('sqlite'));
dump($database->connection());
*/